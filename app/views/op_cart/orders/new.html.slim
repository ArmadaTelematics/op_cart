.op-cart_content
  - if @products.present?
    .op-cart_new-order
      .op-cart_purchasable-items
        h2 Purchasable Items
        table
          thead
            tr
              th Product Name
              th Description
              th Price
              th
          tbody
            - @products.each do |product|
              tr id="#{dom_id product}" data-product-id=(product.id)
                td = product.name
                td = product.description
                td = number_to_currency product.price / 100
                td
                  a.op-cart_add href="#" onclick="OpCart.addItemToOrder(#{product.id}, 1); return false" Add to Order

      .op-cart_items-in-order
        h2 Items in Order
        table
          thead
            tr
              th Product Name
              th Price
              th Qty
              th
          tbody
            - @products.each do |product|
              tr id="#{dom_id product, 'line_item'}"
                td = product.name
                td = number_to_currency product.price / 100
                td.quantity 0
                td
                  a.op-cart_remove href="#" onclick="OpCart.removeItemFromOrder(#{product.id}); return false" Remove

    = simple_form_for @order, data: { stripe_key: Rails.configuration.stripe[:publishable_key] } do |f|
      span.payment-errors
      .op-cart_your-information
        h2 Your Information
        - if signed_in?
          strong Email:&nbsp;
          span = current_user.email
        - else
          = simple_fields_for :user do |fu|
            = fu.input :email, autofocus: true, input_html: { autocomplete: 'email' }
            = fu.input :password

      .op-cart_shipping-address
        h2 Shipping Address
        = simple_fields_for :shipping_address do |sa|
          - focus_name = signed_in? ? true : false
          = sa.input :full_name, autofocus: focus_name, input_html: { autocomplete: 'name' }
          = sa.input :street, input_html: { autocomplete: 'street-address' }
          = sa.input :postal_code, input_html: { autocomplete: 'postal-code' }
          = sa.input :locality, disabled: true, input_html: { autocomplete: 'city' }
          = sa.input :region, disabled: true, input_html: { autocomplete: 'state' }

      .op-cart_card-details
        h2 Card Details
        - if f.object.card_token.present?
          span Card information already provided.
        - else
          #card_form_inputs
            = simple_fields_for :credit_card do |c|
              = c.input :number, input_html: { autocomplete: 'cc-number' }
              = c.input :expiry, input_html: { autocomplete: 'cc-exp' }
              = c.input :cvc, input_html: { autocomplete: 'cc-csc' }

      = simple_fields_for :line_items do |li|
        = li.input :quantities_json, as: :hidden
      = f.input :card_token, as: :hidden

      .form-actions
        = f.button :button, "Submit Payment"
  - else
    p Add an item to your order to begin.

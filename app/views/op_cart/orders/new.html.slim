- if @products.present?
  .new_order
    h2 Purchasble Items
    ul style="list-style-type: none"
      - @products.each do |product|
        li
          p = product.name
          p = product.description
          p = number_to_currency product.price / 100
          p
            a onclick="OpCart.addItemToOrder(#{product.id}, 1)" style="cursor:pointer"
              | Add to Order

    h2 Items in Order
    ul style="list-style-type: none"
      - @products.each do |product|
        li id="#{dom_id product, 'line_item'}"
          p = product.name
          p = number_to_currency product.price / 100
          p.quantity
            span.name Quantity:&nbsp;
            span.value 0
          p
            a onclick="OpCart.removeItemFromOrder(#{product.id})" style="cursor:pointer"
              | Remove

  = simple_form_for @order, data: { stripe_key: Rails.configuration.stripe[:publishable_key] } do |f|
    span.payment-errors
    p
      h2 Your Information
      = f.input :email, autofocus: true, input_html: { autocomplete: 'email' }

    p
      h2 Shipping Address
      = f.simple_fields_for :shipping_addresses do |sa|
        = sa.input :full_name, input_html: { autocomplete: 'name' }
        = sa.input :address, input_html: { autocomplete: 'street-address' }
        = sa.input :zip_code, input_html: { autocomplete: 'postal-code' }
        = sa.input :city, disabled: true, input_html: { autocomplete: 'city' }
        = sa.input :state, disabled: true, input_html: { autocomplete: 'state' }

    p
      h2 Card Details
      = f.simple_fields_for :credit_cards do |c|
        = c.input :number, input_html: { autocomplete: 'cc-number' }
        = c.input :expiry, input_html: { autocomplete: 'cc-exp' }
        = c.input :cvc, input_html: { autocomplete: 'cc-csc' }

    = f.input :card_token, as: :hidden
    = hidden_field :line_items, :quantities, value: "{}"

    .form-actions
      = f.button :button, "Submit Payment"
- else
  p Add an item to your order to begin.
